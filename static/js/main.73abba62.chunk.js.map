{"version":3,"sources":["Fretboard.module.css","NoteSelector.module.css","Note.ts","Fretboard.tsx","FretPosition.ts","NoteLabel.tsx","NoteSelector.tsx","App.tsx","serviceWorker.ts","index.tsx","App.module.css"],"names":["module","exports","Name","Accidental","Note","tones","this","note","every","otherTone","find","tone","name","accidental","reduce","acc","length","position","openStringNote","strings","string","stringIndex","chromaticScale","findIndex","isEqual","fret","A","SHARP","B","FLAT","C","D","E","F","G","rows","columns","Array","from","keys","inlays","row","column","Fretboard","props","showOctaves","mainNote","positionToNote","className","styles","container","info","fretboard","map","stringMatch","match","octave","key","clsx","nut","inlay","getRandomInt","min","max","Math","ceil","floor","random","randomNotePosition","NoteLabel","toneA","toneB","NoteSelector","onMatch","useState","selectedNote","setSelectedNote","matchingNote","useEffect","timeoutId","window","setTimeout","clearTimeout","checked","onChange","type","getKey","App","setShowOctaves","setPosition","options","onClick","Boolean","location","hostname","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.73abba62.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Fretboard_container__Jh935\",\"fretboard\":\"Fretboard_fretboard__gw8P6\",\"nut\":\"Fretboard_nut__3hB_N\",\"fret\":\"Fretboard_fret__3bRCi\",\"open-note\":\"Fretboard_open-note__1TuzX\",\"sixth-string-open-note\":\"Fretboard_sixth-string-open-note__22p2m\",\"inlay\":\"Fretboard_inlay__1dLi5\",\"inlay-top\":\"Fretboard_inlay-top__JlOop\",\"inlay-bottom\":\"Fretboard_inlay-bottom__1pbgK\",\"note\":\"Fretboard_note__21uMM\",\"sixth-string-note\":\"Fretboard_sixth-string-note__BCNmY\",\"octave-note\":\"Fretboard_octave-note__2ebrg\",\"info\":\"Fretboard_info__2cSVq\",\"info-note\":\"Fretboard_info-note__3nyfo\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"NoteSelector_container__3M-mk\"};","import { FretPosition } from \"./FretPosition\";\n\nexport enum Name {\n  A = \"A\",\n  B = \"B\",\n  C = \"C\",\n  D = \"D\",\n  E = \"E\",\n  F = \"F\",\n  G = \"G\",\n}\n\nexport enum Accidental {\n  SHARP = \"\\u266F\",\n  FLAT = \"\\u266D\",\n}\n\nexport interface Tone {\n  name: Name;\n  accidental: Accidental | null;\n}\n\nexport default class Note {\n  tones: Tone[];\n\n  constructor(tones: Tone[]) {\n    this.tones = tones;\n  }\n\n  isEqual(note: Note) {\n    return note.tones.every((otherTone) =>\n      this.tones.find(\n        (tone) =>\n          otherTone.name === tone.name &&\n          otherTone.accidental === tone.accidental\n      )\n    );\n  }\n\n  getKey() {\n    return this.tones.reduce(\n      (acc, note) => (acc.length ? `${acc}-${note.name}` : note.name),\n      \"\"\n    );\n  }\n\n  static positionToNote(position: FretPosition): Note {\n    const openStringNote = strings[position.string - 1];\n    const stringIndex = chromaticScale.findIndex((note) =>\n      openStringNote.isEqual(note)\n    );\n    return chromaticScale[\n      (stringIndex + position.fret) % chromaticScale.length\n    ];\n  }\n}\n\nexport const chromaticScale: Note[] = [\n  new Note([{ name: Name.A, accidental: null }]),\n  new Note([\n    { name: Name.A, accidental: Accidental.SHARP },\n    { name: Name.B, accidental: Accidental.FLAT },\n  ]),\n  new Note([{ name: Name.B, accidental: null }]),\n  new Note([{ name: Name.C, accidental: null }]),\n  new Note([\n    { name: Name.C, accidental: Accidental.SHARP },\n    { name: Name.D, accidental: Accidental.FLAT },\n  ]),\n  new Note([{ name: Name.D, accidental: null }]),\n  new Note([\n    { name: Name.D, accidental: Accidental.SHARP },\n    { name: Name.E, accidental: Accidental.FLAT },\n  ]),\n  new Note([{ name: Name.E, accidental: null }]),\n  new Note([{ name: Name.F, accidental: null }]),\n  new Note([\n    { name: Name.F, accidental: Accidental.SHARP },\n    { name: Name.G, accidental: Accidental.FLAT },\n  ]),\n  new Note([{ name: Name.G, accidental: null }]),\n  new Note([\n    { name: Name.G, accidental: Accidental.SHARP },\n    { name: Name.A, accidental: Accidental.FLAT },\n  ]),\n];\n\nexport const strings = [\n  new Note([{ name: Name.E, accidental: null }]),\n  new Note([{ name: Name.B, accidental: null }]),\n  new Note([{ name: Name.G, accidental: null }]),\n  new Note([{ name: Name.D, accidental: null }]),\n  new Note([{ name: Name.A, accidental: null }]),\n  new Note([{ name: Name.E, accidental: null }]),\n];\n","import React from \"react\";\nimport clsx from \"clsx\";\n\nimport styles from \"./Fretboard.module.css\";\nimport { FretPosition } from \"./FretPosition\";\nimport Note from \"./Note\";\n\ninterface FretboardProps {\n  position: FretPosition;\n  showOctaves: boolean;\n}\n\nconst rows = [1, 2, 3, 4, 5, 6];\nconst columns = Array.from(Array(13).keys());\nconst inlays = [\n  { row: 2, column: 12 },\n  { row: 3, column: 3 },\n  { row: 3, column: 5 },\n  { row: 3, column: 7 },\n  { row: 3, column: 9 },\n  { row: 4, column: 12 },\n];\n\nexport default function Fretboard(props: FretboardProps) {\n  const { position, showOctaves } = props;\n  const { string, fret } = position;\n  const mainNote = Note.positionToNote(position);\n  return (\n    <div className={styles.container}>\n      <div className={styles.info}>\n        <div>\n          (1)<span className={styles[\"info-note\"]}>E</span>\n        </div>\n        <div>\n          (2)<span className={styles[\"info-note\"]}>B</span>\n        </div>\n        <div>\n          (3)<span className={styles[\"info-note\"]}>G</span>\n        </div>\n        <div>\n          (4)<span className={styles[\"info-note\"]}>D</span>\n        </div>\n        <div>\n          (5)<span className={styles[\"info-note\"]}>A</span>\n        </div>\n        <div>\n          (6)<span className={styles[\"info-note\"]}>E</span>\n        </div>\n      </div>\n      <div className={styles.fretboard}>\n        {rows.map((row) => {\n          return columns.map((column) => {\n            const stringMatch = string === row;\n            const match = fret === column && stringMatch;\n            const note = Note.positionToNote({ string: row, fret: column });\n            const octave = !match && mainNote.isEqual(note);\n            const key = `${row}-${column}`;\n\n            // open string notes\n            if (column === 0) {\n              return (\n                <div\n                  className={clsx({\n                    [styles.nut]: true,\n                  })}\n                  key={key}\n                />\n              );\n            }\n\n            const inlay = inlays.find(\n              (inlay) => row === inlay.row && column === inlay.column\n            );\n            return (\n              <div\n                className={clsx({\n                  [styles.fret]: true,\n                  [styles[\"open-note\"]]: stringMatch && fret === 0,\n                })}\n                key={key}\n              >\n                {match && (\n                  <div\n                    className={clsx({\n                      [styles.note]: true,\n                    })}\n                  />\n                )}\n                {showOctaves && octave && (\n                  <div\n                    className={clsx({\n                      [styles.note]: true,\n                      [styles[\"octave-note\"]]: octave,\n                    })}\n                  />\n                )}\n                {inlay && (\n                  <div\n                    className={clsx({\n                      [styles.inlay]: true,\n                      [styles[\"inlay-top\"]]: row === 2,\n                      [styles[\"inlay-bottom\"]]: row === 4,\n                    })}\n                  />\n                )}\n              </div>\n            );\n          });\n        })}\n      </div>\n    </div>\n  );\n}\n","export interface FretPosition {\n  string: number;\n  fret: number;\n}\n\nfunction getRandomInt(min: number, max: number): number {\n  min = Math.ceil(min);\n  max = Math.floor(max);\n  return Math.floor(Math.random() * (max - min + 1) + min);\n}\n\nexport function randomNotePosition(): FretPosition {\n  return {\n    string: getRandomInt(1, 6),\n    fret: getRandomInt(0, 12),\n  };\n}\n","import React from \"react\";\n\nimport Note from \"./Note\";\n\ninterface NoteLabelProps {\n  note: Note;\n}\n\nexport default function NoteLabel(props: NoteLabelProps) {\n  const { note } = props;\n  const [toneA, toneB] = note.tones;\n  return (\n    <div>\n      {!!toneA && (\n        <var key={`${toneA.name}-${toneA.accidental}`}>\n          {toneA.name}\n          {!!toneA.accidental && <sup>{toneA.accidental}</sup>}\n        </var>\n      )}\n      {!!toneB && \"/\"}\n      {!!toneB && (\n        <var key={`${toneB.name}-${toneB.accidental}`}>\n          {toneB.name}\n          {!!toneB.accidental && <sup>{toneB.accidental}</sup>}\n        </var>\n      )}\n    </div>\n  );\n}\n","import React, { useEffect, useState } from \"react\";\n\nimport { FretPosition } from \"./FretPosition\";\nimport Note, { chromaticScale } from \"./Note\";\nimport NoteLabel from \"./NoteLabel\";\nimport styles from \"./NoteSelector.module.css\";\n\ninterface NoteSelectorProps {\n  onMatch: () => void;\n  position: FretPosition;\n}\n\nexport default function NoteSelector(props: NoteSelectorProps) {\n  const { position, onMatch } = props;\n  const [selectedNote, setSelectedNote] = useState<Note | null>(null);\n  const matchingNote = Note.positionToNote(position);\n\n  useEffect(() => {\n    let timeoutId: number;\n    if (selectedNote && selectedNote.isEqual(matchingNote)) {\n      timeoutId = window.setTimeout(() => {\n        setSelectedNote(null);\n        onMatch();\n      }, 500);\n    }\n\n    return () => {\n      if (timeoutId) {\n        clearTimeout(timeoutId);\n      }\n    };\n  }, [selectedNote, matchingNote, onMatch]);\n\n  return (\n    <div className={styles.container}>\n      {chromaticScale.map((note) => {\n        return (\n          <label key={note.getKey()}>\n            <input\n              checked={selectedNote ? note.isEqual(selectedNote) : false}\n              onChange={() => {\n                setSelectedNote(note);\n              }}\n              type=\"radio\"\n            />\n            <NoteLabel note={note} />\n          </label>\n        );\n      })}\n    </div>\n  );\n}\n","import React, { useState } from \"react\";\n\nimport styles from \"./App.module.css\";\nimport Fretboard from \"./Fretboard\";\nimport { randomNotePosition } from \"./FretPosition\";\nimport NoteSelector from \"./NoteSelector\";\n\nfunction App() {\n  const [showOctaves, setShowOctaves] = useState(false);\n  const [position, setPosition] = useState(randomNotePosition());\n  return (\n    <div className={styles.container}>\n      <Fretboard position={position} showOctaves={showOctaves} />\n      <NoteSelector\n        onMatch={() => {\n          setPosition(randomNotePosition());\n        }}\n        position={position}\n      />\n      <div className={styles.options}>\n        <button onClick={() => setShowOctaves(!showOctaves)} type=\"button\">\n          Show Octaves\n        </button>\n        <button onClick={() => setPosition(randomNotePosition)} type=\"button\">\n          New Note\n        </button>\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      process.env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\n\nimport \"normalize.css\";\n\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"App_container__1MQN3\",\"options\":\"App_options__I9UEV\"};"],"sourceRoot":""}